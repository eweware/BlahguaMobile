// This file has been autogenerated from a class added in the UI designer.

using System;

using BlahguaMobile.BlahguaCore;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace BlahguaMobile.IOS
{
	public partial class BGBadgeCollectionViewController : UICollectionViewController
	{


		public BGBadgeCollectionViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad ()
		{
            AppDelegate.analytics.PostPageView("/self/badges");

			base.ViewDidLoad ();
            this.Title = "Badges";
			this.NavigationController.SetNavigationBarHidden(false, true);

			View.BackgroundColor = UIColor.White;

            NavigationItem.LeftBarButtonItem = new UIBarButtonItem("Back", UIBarButtonItemStyle.Plain, (s, e)=> 
                {
                    this.NavigationController.PopViewControllerAnimated(true);
                });
            NavigationItem.LeftBarButtonItem.SetTitleTextAttributes(new UITextAttributes
                { 
                    TextColor = BGAppearanceConstants.TealGreen, 
                    TextShadowColor = UIColor.Clear, 
                    Font = UIFont.FromName("Merriweather", 16) 
                }, UIControlState.Normal);


			NavigationItem.RightBarButtonItem = new UIBarButtonItem ("Add", UIBarButtonItemStyle.Plain, NewBadge);
			CollectionView.BackgroundColor = UIColor.White;
          
            NavigationItem.RightBarButtonItem.SetTitleTextAttributes(new UITextAttributes
                { 
                    TextColor = BGAppearanceConstants.TealGreen, 
                    TextShadowColor = UIColor.Clear, 
                    Font = UIFont.FromName("Merriweather", 16) 
                }, UIControlState.Normal  );


			CollectionView.DataSource = new BGBadgeCollectionSource ();
            noBadgeLabel.Hidden = true;
		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
            this.Title = "Badges";
            this.NavigationController.NavigationBar.TitleTextAttributes = new UIStringAttributes()
            {
                Font = UIFont.FromName("Merriweather", 20),
                    ForegroundColor = UIColor.FromRGB(96, 191, 164)
            };

			CollectionView.ReloadData ();
            if ((BlahguaAPIObject.Current.CurrentUser.Badges == null) ||
                (BlahguaAPIObject.Current.CurrentUser.Badges.Count == 0))
            {
                noBadgeLabel.LineBreakMode = UILineBreakMode.WordWrap;
                noBadgeLabel.Lines = 0;
                noBadgeLabel.AttributedText = new NSAttributedString ("You currently have no badges." + System.Environment.NewLine + "Click 'Add' to add some now!", UIFont.FromName (BGAppearanceConstants.MediumItalicFontName, 15), UIColor.Black);
                noBadgeLabel.TextAlignment = UITextAlignment.Center;
                noBadgeLabel.Hidden = false;
            }
            else
            {
                noBadgeLabel.Hidden = true;
            }

		}

		private void NewBadge(object sender, EventArgs e)
		{
			PerformSegue ("fromBadgeToNewBadge", this);
		}

		public void RemoveNewBadgeView ()
		{
			throw new NotImplementedException ();
		}
	}

	public class BGBadgeCollectionSource : UICollectionViewDataSource
	{
		public override UICollectionViewCell GetCell (UICollectionView collectionView, NSIndexPath indexPath)
		{
			var cell = (BGBadgeCell)collectionView.DequeueReusableCell (new NSString("badgeCell"), indexPath);
			var badge = BlahguaAPIObject.Current.CurrentUser.Badges[indexPath.Row];
			cell.SetUp (badge.BadgeImage, badge.BadgeName);
			return cell;
		}

		public override int GetItemsCount (UICollectionView collectionView, int section)
		{

			return BlahguaAPIObject.Current.CurrentUser.Badges == null ? 0 : BlahguaAPIObject.Current.CurrentUser.Badges.Count;
		}

		public override int NumberOfSections (UICollectionView collectionView)
		{
			return 1;
		}
	}
}
