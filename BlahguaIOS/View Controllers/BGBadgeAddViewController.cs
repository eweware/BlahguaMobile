// This file has been autogenerated from a class added in the UI designer.

using System;

using BlahguaMobile.BlahguaCore;

using MonoTouch.Foundation;
using MonoTouch.UIKit;

namespace BlahguaMobile.IOS
{
	public partial class BGBadgeAddViewController : UIViewController
	{
		private string ticketString;
		private bool isEmail;

		public BGBadgeAddViewController (IntPtr handle) : base (handle)
		{
		}
		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			View.BackgroundColor = UIColor.FromPatternImage (UIImage.FromFile ("grayBack.png"));

			infoTitle.AttributedText = new NSAttributedString("Badges add credibility to content by letting users attach verified facts about themselves (e.g. I work at Microsoft, I am in Chicago, etc.). Currently only email-based badges are issued.",
				UIFont.FromName(BGAppearanceConstants.FontName, 17),
				UIColor.Black
			);

			emailTextField.AttributedPlaceholder = new NSAttributedString(
				"Type email address", UIFont.FromName(BGAppearanceConstants.FontName, 17), 
				UIColor.LightGray
			);

			emailTextField.AttributedText = new NSAttributedString(
				"", 
				UIFont.FromName(BGAppearanceConstants.FontName, 17), 
				UIColor.Black
			);
			emailTextField.AllEditingEvents += (object sender, EventArgs e) => {
				if(!String.IsNullOrEmpty(emailTextField.Text))
				{
					doneButton.Enabled = true;
				}
				else
				{
					doneButton.Enabled = false;
				}
			};

			doneButton.Enabled = false;
			doneButton.SetBackgroundImage (UIImage.FromFile ("long_button.png"), UIControlState.Normal);
			doneButton.SetBackgroundImage (UIImage.FromFile ("long_button_gray.png"), UIControlState.Disabled);
			doneButton.SetAttributedTitle(new NSAttributedString("Done", UIFont.FromName(BGAppearanceConstants.BoldFontName, 17), UIColor.White), UIControlState.Normal);
			doneButton.TouchUpInside += (object sender, EventArgs e) => {
				emailTextField.ResignFirstResponder();
				BlahguaAPIObject.Current.GetBadgeAuthorities((authorities) =>{
					InvokeOnMainThread(() => {
						string authId = authorities[0]._id;
						string emailAddr = emailTextField.Text;
						BlahguaAPIObject.Current.GetBadgeForUser(authId, (ticket) => {
							InvokeOnMainThread(() => {
								if(ticket == String.Empty)
								{
									UIAlertView alert = new UIAlertView("", "The authority currently has no badges for that email address. Please try again in the future.", null, "OK");
									alert.Show();
								}
								else
								{
									ticketString = ticket;
									doneButton.Enabled = false;
									emailTextField.Text = String.Empty;
									emailTextField.Placeholder = "Type validation code";
									doneButton.TouchUpInside += (object s, EventArgs ev) => {
										BlahguaAPIObject.Current.VerifyEmailBadge(emailTextField.Text, ticketString, (result) => {
											InvokeOnMainThread(() =>{
												if(result == String.Empty)
												{
													UIAlertView alert = new UIAlertView("", "That validation code was not valid.  Please retry your badging attempt.", null, "OK");
													alert.Show();
												}
												else
												{
													NavigationController.PopViewControllerAnimated(true);
												}
											});
										});
									};
								}
							});
						});
					});
				});
			};

		}
	}
}
